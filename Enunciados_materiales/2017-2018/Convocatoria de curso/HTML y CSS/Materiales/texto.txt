SASS

El lenguaje de hojas de estilo

Sass (Syntactically Awesome Stylesheets) es un lenguaje de hoja de estilos inicialmente diseñado por Hampton Catlin y desarrollado por Nathan Weizenbaum. Después de sus versiones iniciales, Nathan Weizenbaum y Chris Eppstein han continuado extendiendo Sass con SassScript, un lenguaje de script simple, usado en los ficheros Sass.

Sass Website
Sass Git 
pyScss

Introducción
Variables
Mixins
Argumentos
En combinación
Integración con los IDEs
Mixins y frameworks
Frameworks responsivos


Introducción

Sass es un metalenguaje de Hojas de Estilo en Cascada (CSS). Es un lenguaje de script que es traducido a CSS. SassScript es el lenguaje de script en sí mismo. Sass consiste en dos sintaxis. La sintaxis original, llamada indented syntax («sintaxis con sangrado») que usa una sintaxis similar al Haml. Éste usa la indentación para separar bloques de código y el carácter nueva línea para separar reglas.

Fig 1. Esquema de conversión SASS.

La sintaxis más reciente, SCSS, usa el formato de bloques como CSS. Éste usa llaves para denotar bloques de código y punto y coma (;) para separar las líneas dentro de un bloque. La sintaxis indentada y los ficheros SCSS tienen las extensiones .sass y .scss respectivamente.


Variables

Sass permite la definición de variables. Las variables comienzan con el signo de dólar ($). La asignación de variables se hace con los dos puntos (:). SassScript permite 4 tipos de datos:

Números (incluyendo las unidades)
Strings (con comillas o sin ellas)
Colores (código, o nombre)
Booleanos
Las variables pueden ser resultados o argumentos de varias funciones disponibles. Durante el proceso de traducción, los valores de las variables son insertados en el documento CSS de salida.


Mixins

CSS no soporta mixins. Cualquier código duplicado debe ser repetido en cada lugar. Un mixin es una sección de código que contiene código Sass. Cada vez que se llama un mixin en el proceso de conversión el contenido del mismo es insertado en el lugar de la llamada. Los mixin permiten una solución limpia a las repeticiones de código, así como una forma fácil de alterar el mismo.


Argumentos

Los mixins también soportan argumentos.

@mixin left($dist) {
  float: left;
  margin-left: $dist;
}

#data {
  @include left(10px);
}

Debe compilar a:

#data {
  float: left;
  margin-left: 10px;
}


En combinación

@mixin table-base {
  th {
    text-align: center;
    font-weight: bold;
  }
  td, th {padding: 2px}
}

@mixin left($dist) {
  float: left;
  margin-left: $dist;
}

#data {
  @include left(10px);
  @include table-base;
}

Debe compilar a:

#data {
  float: left;
  margin-left: 10px;
}
#data th {
  text-align: center;
  font-weight: bold;
}
#data td, #data th {
  padding: 2px;
}


Integración con los IDEs

IDE	Software	Website
Microsoft Visual Studio	Mindscape	http://www.mindscapehq.com/products/web-workbench
Eclipse		
JetBrains RubyMine		
NetBeans		http://plugins.netbeans.org/plugin/34929/scss-support


Mixins y frameworks

Existen varios grupos de mixins o llamados frameworks que basados en Sass hacen más rápido el crear o aplicar estilos reduciendo la sintaxis.

Compass (http://compass-style.org/)
Bourbon (http://bourbon.io/)


Frameworks responsivos

Estos frameworks usan Sass como base y su función básica es resolver el acomodo de diferentes tamaños de pantalla para lograr un diseño responsivo del sitio web.

Susy (http://susy.oddbird.net/)
Singularity (http://singularity.gs/)
Bootstrap (a partir de la versión 4) (http://getbootstrap.com/)


Este texto ha sido tomado de Wikipedia (https://es.wikipedia.org/wiki/Sass_(lenguaje_de_hojas_de_estilo))
